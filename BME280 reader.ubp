module main
author unknown
version 1 0 
description ''
variables Upstairs_Temperature Test_Temperature Test_Humidity Test_Pressure 

script 587 130 {
whenStarted
forever {
  Test_Temperature = (('bmx280 temperature') / 100)
  waitMillis 500
  Test_Humidity = (('bme280 humidity') / 100)
  waitMillis 500
  Test_Pressure = (10 / ('bmx280 pressure'))
  waitMillis 500
  printIt (('bmx280 temperature') / 100) (('bme280 humidity') / 100) (('bmx280 pressure') / 100)
}
}


module BMX280 Input
author 'José Garcia Yeste'
version 1 0 
tags sensor pressure temperature humidity 
description 'Provides support for the BME280 and BMP280 barometric pressure sensors. These sensors measure temperature, pressure and humidity.'
variables _bme280coefficients 

	spec 'r' 'bme280 connected' 'bme280 connected'
	spec 'r' 'bmp280 connected' 'bmp280 connected'
	spec 'r' 'bmx280 temperature' 'bmx280 temperature'
	spec 'r' 'bmx280 pressure' 'bmx280 pressure'
	spec ' ' '_bmx280 setup' '_bmx280 setup'
	spec 'r' '_bmx280 temperature' '_bmx280 temperature'
	spec 'r' 'bme280 humidity' 'bme280 humidity'

to '_bmx280 setup' {
  comment 'By José Garcia Yeste'
  _bme280coefficients = (newList 18)
  comment 'Read temperature coefficients'
  local 'reg' (hexToInt '88')
  for i 3 {
    atPut i _bme280coefficients (((i2cGet (hexToInt '76') (reg + 1)) << 8) | (i2cGet (hexToInt '76') reg))
    reg += 2
  }
  comment 'Read pressure coefficients'
  local 'reg' (hexToInt '8E')
  for i 9 {
    atPut (i + 3) _bme280coefficients (((i2cGet (hexToInt '76') (reg + 1)) << 8) | (i2cGet (hexToInt '76') reg))
    reg += 2
  }
  if ('bme280 connected') {
    i2cSet (hexToInt '76') (hexToInt 'F2') (0 | 7)
    comment 'Read humidity coefficients'
    atPut 13 _bme280coefficients (i2cGet (hexToInt '76') (hexToInt 'A1'))
    atPut 14 _bme280coefficients (((i2cGet (hexToInt '76') (hexToInt 'E2')) << 8) | (i2cGet (hexToInt '76') (hexToInt 'E1')))
    atPut 15 _bme280coefficients (i2cGet (hexToInt '76') (hexToInt 'E3'))
    atPut 16 _bme280coefficients (((i2cGet (hexToInt '76') (hexToInt 'E4')) << 4) | ((i2cGet (hexToInt '76') (hexToInt 'E5')) & 15))
    atPut 17 _bme280coefficients (((i2cGet (hexToInt '76') (hexToInt 'E6')) << 4) | (((i2cGet (hexToInt '76') (hexToInt 'E5')) >> 4) & 15))
    atPut 18 _bme280coefficients (i2cGet (hexToInt '76') (hexToInt 'E7'))
  }
  comment 'Most are signed coefs'
  for i 18 {
    if (and ((at i _bme280coefficients) > 32768) (('[data:find]' i ('[data:makeList]' 1 4 13 15)) < 0)) {atPut i _bme280coefficients ((at i _bme280coefficients) - 65536)}
  }
  comment 'Cfg: temp << 5 & pres << 2 & sensor mode  '
  i2cSet (hexToInt '76') (hexToInt 'F4') (((5 << 5) | (5 << 2)) | 3)
}

to '_bmx280 temperature' {
  if (_bme280coefficients == 0) {'_bmx280 setup'}
  '[sensors:i2cWrite]' (hexToInt '76') (hexToInt 'FA')
  local 'data' (newList 3)
  atPut 1 data 3
  '[sensors:i2cRead]' (hexToInt '76') data
  local 'r' ((((at 1 data) << 12) | ((at 2 data) << 4)) | (((at 3 data) >> 4) & 15))
  local 'v1' ((((r >> 3) - ((at 1 _bme280coefficients) << 1)) * (at 2 _bme280coefficients)) >> 11)
  local 'v2' ((r >> 4) - (at 1 _bme280coefficients))
  v2 = ((((v2 * v2) >> 12) * (at 3 _bme280coefficients)) >> 14)
  return (v1 + v2)
}

to 'bme280 connected' {
  return ((i2cGet (hexToInt '76') (hexToInt 'D0')) == (hexToInt '60'))
}

to 'bme280 humidity' {
  local 't' ('_bmx280 temperature')
  local 'r' (((i2cGet (hexToInt '76') (hexToInt 'FD')) << 8) | (i2cGet (hexToInt '76') (hexToInt 'FE')))
  local 'v1' (t - 76800)
  v1 = (((((r << 14) - ((at 16 _bme280coefficients) << 20)) - (((at 17 _bme280coefficients) * v1) + 16384)) >> 15) * (((((longMult ((v1 * (at 18 _bme280coefficients)) >> 10) (((v1 * (at 15 _bme280coefficients)) >> 11) + 32768) 10) + 2097152) * (at 14 _bme280coefficients)) + 8192) >> 14))
  v1 = (v1 - (((((v1 >> 15) * (v1 >> 15)) >> 7) * (at 13 _bme280coefficients)) >> 4))
  v1 = (maximum 0 (minimum v1 419430400))
  v1 = (v1 >> 12)
  return ((v1 * 100) / 1024)
}

to 'bmp280 connected' {
  local 'value' (i2cGet (hexToInt '76') (hexToInt 'D0'))
  return (and (value >= (hexToInt '56')) (value <= (hexToInt '58')))
}

to 'bmx280 pressure' {
  local 't' ('_bmx280 temperature')
  '[sensors:i2cWrite]' (hexToInt '76') (hexToInt 'F7')
  local 'data' (newList 3)
  atPut 1 data 3
  '[sensors:i2cRead]' (hexToInt '76') data
  local 'r' ((((at 1 data) << 12) | ((at 2 data) << 4)) | (((at 3 data) >> 4) & 15))
  local 'v1' ((t >> 1) - 64000)
  local 'v2' ((((v1 >> 2) * (v1 >> 2)) >> 11) * (at 9 _bme280coefficients))
  v2 += ((v1 * (at 8 _bme280coefficients)) << 1)
  v2 = ((v2 >> 2) + ((at 7 _bme280coefficients) << 16))
  v1 = (((((at 6 _bme280coefficients) * (((v1 >> 2) * (v1 >> 2)) >> 13)) >> 3) + (((at 5 _bme280coefficients) * v1) >> 1)) >> 18)
  v1 = (longMult (32768 + v1) (at 4 _bme280coefficients) 15)
  if (v1 == 0) {
    return 0
  } else {
    comment 'p = (((U32_t)(((S32_t)1048576)-adc_P)-(var2>>12)))*3125;
p = (p /(U32_t)var1) * 2;'
    local 'p' (((((1048576 - r) - (v2 >> 12)) * 1250) / v1) * 5)
    v1 = (longMult (at 12 _bme280coefficients) (longMult (p >> 3) (p >> 3) 13) 12)
    v2 = (longMult (p >> 2) (at 11 _bme280coefficients) 13)
    p += (((v1 + v2) + (at 10 _bme280coefficients)) >> 4)
    return p
  }
}

to 'bmx280 temperature' {
  return (((('_bmx280 temperature') * 5) + 128) >> 8)
}


module 'Basic Sensors' Input
author MicroBlocks
version 1 0 
tags tilt acceleration light sensor 
description 'Provides blocks to read tilt in the three axes, acceleration, temperature and light level. Many boards come with this particular set of sensors, such as the micro:bit, the Circuit Playground Express, the Calliope or the Citilab ED1.'

	spec 'r' '[sensors:tiltX]' 'tilt x'
	spec 'r' '[sensors:tiltY]' 'tilt y'
	spec 'r' '[sensors:tiltZ]' 'tilt z'
	spec 'r' '[sensors:acceleration]' 'acceleration'
	spec 'r' '[display:lightLevel]' 'light level'
	spec 'r' '[sensors:temperature]' 'temperature (°C)'

module 'LED Display' Output
author MicroBlocks
version 1 0 
tags pixel matrix led tft 
description 'Display primitives for the 5x5 LED display on the BBC micro:bit, Calliope mini and M5Atom Matrix. Boards with TFT displays (such as the Citilab ED1 or the M5Stack family) also support this primitives in a simulated "fat pixel" display.'

	spec ' ' '[display:mbDisplay]' 'display _' 'microbitDisplay' 15237440
	spec ' ' '[display:mbDisplayOff]' 'clear display'
	spec ' ' '[display:mbPlot]' 'plot x _ y _' 'num num' 3 3
	spec ' ' '[display:mbUnplot]' 'unplot x _ y _' 'num num' 3 3
	spec ' ' 'displayCharacter' 'display character _' 'str' 'A'

to displayCharacter s {
  s = ('[data:join]' '' s)
  '[display:mbDrawShape]' ('[display:mbShapeForLetter]' (at 1 s))
}

